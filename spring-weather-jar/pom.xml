<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>cloud.nativ.flamewars</groupId>
	<artifactId>spring-weather-jar</artifactId>
	<version>1.0.0</version>
	<name>Spring Weather (JAR)</name>

	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>Hoxton.SR3</spring-cloud.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<!--
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
			-->
		</dependency>
		<!--
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-undertow</artifactId>
		</dependency>
		-->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-core</artifactId>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<version>1.13.0</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-circuitbreaker-resilience4j</artifactId>
		</dependency>
		<!--
		<dependency>
			<groupId>io.github.resilience4j</groupId>
			<artifactId>resilience4j-spring-cloud2</artifactId>
			<version>1.3.1</version>
		</dependency>
		-->

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<executable>true</executable>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>2.1.0</version>
				<!--
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>dockerBuild</goal>
						</goals>
					</execution>
				</executions>
				-->
				<configuration>
					<to>
						<image>spring-weather-jar:1.0.0-jib</image>
					</to>
					<from>
						<image>gcr.io/distroless/java:8</image>
					</from>
					<containerizingMode>exploded</containerizingMode>
					<container>
						<jvmFlags>
							<jvmFlag>-server</jvmFlag>
							<jvmFlag>-Xshare:auto</jvmFlag>
							<jvmFlag>-XX:+UseContainerSupport</jvmFlag>
							<jvmFlag>-XX:MaxRAMPercentage=75.0</jvmFlag>
							<jvmFlag>-XX:ThreadStackSize=256</jvmFlag>
							<jvmFlag>-XX:MaxMetaspaceSize=128m</jvmFlag>
							<jvmFlag>-XX:+UseG1GC</jvmFlag>
							<jvmFlag>-XX:MaxGCPauseMillis=250</jvmFlag>
							<jvmFlag>-XX:+UseStringDeduplication</jvmFlag>
							<jvmFlag>-Djava.security.egd=file:/dev/./urandom</jvmFlag>
							<jvmFlag>-Dcom.sun.management.jmxremote</jvmFlag>
							<jvmFlag>-Dcom.sun.management.jmxremote.port=9090</jvmFlag>
							<jvmFlag>-Djava.rmi.server.hostname=localhost</jvmFlag>
							<jvmFlag>-Dcom.sun.management.jmxremote.rmi.port=9090</jvmFlag>
							<jvmFlag>-Dcom.sun.management.jmxremote.ssl=false</jvmFlag>
							<jvmFlag>-Dcom.sun.management.jmxremote.authenticate=false</jvmFlag>
						</jvmFlags>
						<args/>
						<ports>
							<port>8080</port>
							<port>9090</port>
						</ports>
					</container>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
