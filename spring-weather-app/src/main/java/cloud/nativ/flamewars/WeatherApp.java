/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package cloud.nativ.flamewars;

import org.apache.commons.lang3.time.StopWatch;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.IntStream;

public class WeatherApp {

    private static final Logger LOGGER = Logger.getLogger(Weather.class.getName());

    public static void main(String[] args) {
        WeatherApp app = new WeatherApp();
        app.start();

        // who needs for loops, right?!
        IntStream.range(0, 3).forEach(i -> {
            Weather rosenheim = app.getWeather("Rosenheim");
            LOGGER.info(rosenheim.toString());
        });

        // oops, I did it again. ;)
        IntStream.range(0, 3).forEach(i -> {
            Weather london = app.getWeather("London");
            LOGGER.info(london.toString());
        });

        app.stop();
    }

    Weather getWeather(String city) {
        StopWatch watch = StopWatch.createStarted();
        WeatherManager manager = context.getBean(WeatherManager.class);
        LOGGER.log(Level.INFO, "Lookup took {0} ns.", watch.getTime(TimeUnit.NANOSECONDS));
        return manager.getWeather(city);
    }

    private AnnotationConfigApplicationContext context;

    void start() {
        StopWatch watch = StopWatch.createStarted();
        context = new AnnotationConfigApplicationContext();
        context.scan("cloud.nativ.flamewars");
        context.refresh();
        LOGGER.log(Level.INFO, "Start took {0} ms.", watch.getTime(TimeUnit.MILLISECONDS));
    }

    void stop() {
        context.close();
    }
}
